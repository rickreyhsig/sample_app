class User < ActiveRecord::Base
  #before_save { self.email = email.downcase }
  before_save { email.downcase! }
  attr_accessible :email, :name, :password, :password_confirmation
  validates :name, presence: true, length: { maximum: 50 }
  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i
  validates :email, presence: true, length: { maximum: 255 },
                    format: { with: VALID_EMAIL_REGEX },
                    uniqueness: { case_sensitive: false }

  #validates :password, :confirmation => true
  #Automatically create the virtual attribute 'password_confirmation'.
  validates :password,  presence: true, confirmation: true, length: { :within => 6..40 }

  before_save :encrypt_password

  private

    def

    end

    def

    end

  end

#  has_secure_password
#  validates :password, length: { minimum: 6 }
end
