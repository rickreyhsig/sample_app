4.6| Chapter 4 Exercises


1)
def string_shuffle(s)
   s.split(//).shuffle.join
end

# irb(main):032:0> a
# => "ambidextrous"
# irb(main):033:0> string_shuffle(a)
# => "ruaebdmistox"

2)
class String
   def shuffle
     #self.?('').?.?
     self.split(//).shuffle.join
   end
 end

# irb(main):031:0> a.shuffle
# => "duatmxirsobe"

3)
person1 = { "first" => "John", "last" => "Kerry" }
# irb(main):049:0> person1["first"]
# => "John"
person2 = { :first => "Jamie", :last => "Kerry" }
# irb(main):050:0> person2["first"]
# => nil
# irb(main):051:0> person2[:first]
# => "Jamie"
person3 = { first: "Jake", last: "Kerry" }
# irb(main):047:0> person3[:first]
# => "Jake"
# irb(main):048:0> person3["first"]
# => nil

params = {}
params[:father] = person1
params[:mother] = person2
params[:child] = person3
# irb(main):060:0> params
# => {:father=>{"first"=>"John", "last"=>"Kerry"}, :mother=>{:first=>"Jamie", :last=>"Kerry"}, :child=>{:first=>"Jake", :last=>"Kerry"}}

4)
# irb(main):066:0> { "a" => 100, "b" => 200 }.merge({ "b" => 300 })
# => {"a"=>100, "b"=>300}
# irb(main):067:0> { "a" => 100, "b" => 200 }.merge({ "b" => 300 }){|key, oldval, newval| newval - oldval}
# => {"a"=>100, "b"=>100}
# irb(main):068:0> { "a" => 100, "b" => 200 }.merge({ "b" => 300 }){|key, oldval, newval| newval + oldval}
# => {"a"=>100, "b"=>500}
# irb(main):069:0> { "a" => 100, "b" => 200 }.merge({ "b" => 300 }){|key, oldval, newval| newval / oldval}
# => {"a"=>100, "b"=>1}
# irb(main):070:0> { "a" => 100, "b" => 200 }.merge({ "b" => 300 }){|key, oldval, newval| newval * oldval}
# => {"a"=>100, "b"=>60000}
